; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env]
build_flags =
	; to use e.g. as part of the firmware name 
	'-DPIOENV="${PIOENV}"'
	
	; coding_standards
	-Wno-unused-variable
	-Wno-unused-but-set-variable
	-Wunreachable-code

	; debug level 5=VERBOSE https://docs.platformio.org/en/latest/platforms/espressif32.html#debug-level
	;  -DCORE_DEBUG_LEVEL=5extra_scripts = pre:extra_script.py
framework = arduino
; place global libs here or under extra.lib_deps_external (see below)
lib_deps = 
monitor_speed = 115200
platform = espressif32
upload_speed = 921600

; CUSTOM options
; You need manually inject these options into a section
; using ${extra.<name_of_option>} (see below)
[extra]
; https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-guides/external-ram.html
build_flags_psram = 
	-DBOARD_HAS_PSRAM
	-mfix-esp32-psram-cache-issue
lib_deps_builtin = 
	SPI
	Wire
; extend libs for all platforms here
lib_deps_external =

[esp32s3]
build_flags = 
	${env.build_flags}
lib_deps = 
	${env.lib_deps}
	${extra.lib_deps_builtin}
	${extra.lib_deps_external}
	; extend libs only for esp32s3 based modules here

; ************
; * ESP32-S3 *
; ************

; https://docs.platformio.org/en/latest/boards/espressif32/lilygo-t-display-s3.html
; https://www.lilygo.cc/products/t-display-s3
; https://github.com/Xinyuan-LilyGO/T-Display-S3
[env:lilygo-t-display-s3]
board = lilygo-t-display-s3
build_flags = 
	${esp32s3.build_flags}
	; 8MB PSRAM
	${extra.build_flags_psram}
lib_deps = 
	${esp32s3.lib_deps}
